{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","error","handleSubmit","event","preventDefault","addMovie","props","checkEmptyFields","Object","values","every","item","checkIfOnlySpacesEnd","elem","some","x","setState","inputValueChange","target","name","value","this","onSubmit","htmlFor","type","placeholder","onChange","required","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.54a3b586.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    error: '',\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { addMovie } = this.props;\n\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n    const checkEmptyFields = Object.values(this.state)\n      .every(item => (item !== ''));\n\n    const checkIfOnlySpacesStart = Object.values(this.state)\n      .map(item => [...item].every(elem => elem === ' '));\n\n    const checkIfOnlySpacesEnd = checkIfOnlySpacesStart.some(x => x);\n\n    ((checkEmptyFields && !checkIfOnlySpacesEnd)\n      && (addMovie({\n        title,\n        description,\n        imdbUrl,\n        imdbId,\n        imgUrl,\n      })))\n      || (this.setState({\n        error: true,\n      }));\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  }\n\n  inputValueChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  render() {\n    const { title, description, imdbUrl, imdbId, imgUrl } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit} className=\"formAddMovie\">\n        <label htmlFor=\"title\">\n          Title\n          <input\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"title\"\n            value={title}\n            onChange={this.inputValueChange}\n            required\n          />\n          {(this.state.error)\n           && (<span className=\"warning\">Enter a valid title</span>)}\n        </label>\n        <label htmlFor=\"description\">\n          Description\n          <input\n            type=\"text\"\n            name=\"description\"\n            placeholder=\"description\"\n            value={description}\n            onChange={this.inputValueChange}\n          />\n          {(this.state.error)\n           && (<span className=\"warning\">Enter a valid description</span>)}\n        </label>\n        <label htmlFor=\"imgUrl\">\n          imgUrl\n          <input\n            type=\"text\"\n            name=\"imgUrl\"\n            placeholder=\"imgUrl\"\n            value={imgUrl}\n            onChange={this.inputValueChange}\n            required\n          />\n          {(this.state.error)\n          && (<span className=\"warning\">Enter a valid imgUrl</span>)}\n        </label>\n        <label htmlFor=\"imdbUrl\">\n          imdbUrl\n          <input\n            type=\"text\"\n            name=\"imdbUrl\"\n            placeholder=\"imdbUrl\"\n            value={imdbUrl}\n            onChange={this.inputValueChange}\n            required\n          />\n          {(this.state.error)\n           && (<span className=\"warning\">Enter a valid imdbUrl</span>)}\n        </label>\n        <label htmlFor=\"imdbId\">\n          imdbId\n          <input\n            type=\"text\"\n            name=\"imdbId\"\n            placeholder=\"imdbId\"\n            value={imdbId}\n            onChange={this.inputValueChange}\n            required\n          />\n          {(this.state.error)\n           && (<span className=\"warning\">Enter a valid imdbUrl</span>)}\n        </label>\n        <button\n          type=\"submit\"\n        >\n          Add Movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState((state) => {\n      return {\n        movies: [...state.movies, movie],\n      };\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}