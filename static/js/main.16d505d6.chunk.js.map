{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","handleSubmit","event","preventDefault","setState","titleChange","target","value","descriptionChange","imgUrlChange","imdbUrlChange","imdbIdChange","this","checkEmptyFields","Object","values","every","item","checkForSpacesEnd","elem","some","x","onSubmit","htmlFor","type","name","placeholder","onChange","required","onClick","props","addMovie","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.16d505d6.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  }\n\n  titleChange = (event) => {\n    this.setState({\n      title: event.target.value,\n    });\n  }\n\n  descriptionChange = (event) => {\n    this.setState({\n      description: event.target.value,\n    });\n  }\n\n  imgUrlChange = (event) => {\n    this.setState({\n      imgUrl: event.target.value,\n    });\n  }\n\n  imdbUrlChange = (event) => {\n    this.setState({\n      imdbUrl: event.target.value,\n    });\n  }\n\n  imdbIdChange = (event) => {\n    this.setState({\n      imdbId: event.target.value,\n    });\n  }\n\n  render() {\n    const { title, description, imdbUrl, imdbId, imgUrl } = this.state;\n\n    const checkEmptyFields = Object.values(this.state)\n      .every(item => (item !== ''));\n\n    const checkForSpacesStart = Object.values(this.state)\n      .map(item => [...item].every(elem => elem === ' '));\n\n    const checkForSpacesEnd = checkForSpacesStart.some(x => x);\n\n    return (\n      <form onSubmit={this.handleSubmit} className=\"formAddMovie\">\n        <label htmlFor=\"title\">\n          Title\n          <input\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"title\"\n            value={title}\n            onChange={this.titleChange}\n            required\n          />\n        </label>\n        <label htmlFor=\"description\">\n          Description\n          <input\n            type=\"text\"\n            name=\"description\"\n            placeholder=\"description\"\n            value={description}\n            onChange={this.descriptionChange}\n          />\n        </label>\n        <label htmlFor=\"imgUrl\">\n          imgUrl\n          <input\n            type=\"text\"\n            name=\"imgUrl\"\n            placeholder=\"imgUrl\"\n            value={imgUrl}\n            onChange={this.imgUrlChange}\n            required\n          />\n        </label>\n        <label htmlFor=\"imdbUrl\">\n          imdbUrl\n          <input\n            type=\"text\"\n            name=\"imdbUrl\"\n            placeholder=\"imdbUrl\"\n            value={imdbUrl}\n            onChange={this.imdbUrlChange}\n            required\n          />\n        </label>\n        <label htmlFor=\"imdbId\">\n          imdbId\n          <input\n            type=\"text\"\n            name=\"imdbId\"\n            placeholder=\"imdbId\"\n            value={imdbId}\n            onChange={this.imdbIdChange}\n            required\n          />\n        </label>\n        <button\n          type=\"submit\"\n          onClick={() => (checkEmptyFields && !checkForSpacesEnd)\n            && (this.props.addMovie({\n              title,\n              description,\n              imdbUrl,\n              imdbId,\n              imgUrl,\n            }))\n          }\n        >\n          Add Movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState((state) => {\n      return {\n        movies: [...state.movies, movie],\n      };\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}